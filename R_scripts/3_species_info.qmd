---
title: "3_species_info"
author: "Shayna A. Sura"
format: html
---

## Refining list of fish species & gathering information on their climate zone preferences from FishBase



```{r setup}

library(tidyverse) # includes and loads the packages listed below
# library(readr)
# library(tidyr)
# library(dplyr)
# library(ggplot2)
# library(lubridate)

library(here) # helps with paths for files

library(purrr)

library(rvest) #for web scraping
library(xml2)
library(stringr)

# library(devtools) # for loading all functions from functions folder


```




```{r reading in cleaned bio data}
#| echo: false
#| message: false

bio_data_clean <- read_csv(file = "data/clean_data/bio_data_clean.csv")

# head(bio_data_clean)

```






### Refine list of fish species to do all analyses and plotting for! >1000 unique fish 'species' is too many.

- only keep the unique new_TAXON entries that are identified to the SPECIES rank level
- arrange in alphabetical order

(previously) - only keep unique TAXONOMIC entries that have 2 words (Genus species) versus just 1 word (family or genus level only)


```{r extract unique fish species names}

# Extract unique fish species taxonomic names - ONLY fishes identified to species level - returns a dataframe
species_df <- bio_data_clean %>% 
  select(new_TAXON, RANK) %>% 
  filter(RANK == "SPECIES") %>% 
  distinct(new_TAXON, .keep_all = TRUE) %>% 
  arrange(new_TAXON)

# check dimensions
dim(species_df)  ## returns 843 unique taxonomic names after name adjustments above
# convert to vector format so can be used in apply / mapping below to use function on all the species names in this vector
species_list <- species_df$new_TAXON
# check length
length(species_list)


# 
# ## species list for 2010 - 2022 summer months (6,7,8) data only
# yr2010_2022_m678_species_df <- yr2010_2022_m678_bio_data_clean %>% 
#   select(new_TAXON, RANK) %>% 
#   filter(RANK == "SPECIES") %>% 
#   distinct(new_TAXON, .keep_all = TRUE) %>% 
#   arrange(new_TAXON)
# 
# dim(yr2010_2022_m678_species_df) # 513 unique taxonomic names
# yr2010_2022_m678_species_list <- yr2010_2022_m678_species_df$new_TAXON    # converts to vector format so can be used in apply / mapping below to use function on all the species names in this vector
# length(yr2010_2022_m678_species_list) # 513 unique taxonomic names
# 



# ## need to remove the occurrence of CALAMUS PRORIDENS/NODOSUS in the fish species list because it causes problems when trying to scrape data from FishBase
# 
# species_df <- unique(bio_data_clean[grep("\\b\\w+\\s\\w+\\b", bio_data_clean$new_TAXON), "new_TAXON"]) %>% 
#   # filter(TAXONOMIC != "CALAMUS PRORIDENS/NODOSUS") %>% 
#   arrange(new_TAXON)


# # Extract unique fish species taxonomic names - includes taxonomic names to family, genus, and species level
# species_list <- na.omit(unique(bio_data_clean$TAXONOMIC))
# length(species_list) ## returns 1,166 unique taxonomic names


# # Extract unique fish species taxonomic names - ONLY fishes identified to species level - returns a list
# species_df <- bio_data_clean[grep("\\b\\w+\\s\\w+\\b", bio_data_clean$TAXONOMIC), ]
# species_list_2 <- unique(species_df$TAXONOMIC)
# length(species_list_2) ## returns 847 unique taxonomic names

```



## (future) Write code to check list of fish species scientific names versus what is currently accepted in FishBase
### don't do this for now - this information is being updated in the SEAMAP trawl databases
### in the R script "1_organize_data.qmd", we check the UPDATED_TAXON column for an updated scientific name for fish species
#### SEAMAP organizers have updated the information for Centropristis philadelphicus, but not for all species I've identified above yet.

```{r check for updated fish scientific names from FishBase}

## TO DO IN FUTURE ##
# write code to automatically check fish species names against currently accepted names in FishBase #

```








# FishBase Function - scrape information from FishBase to determine the climate zone information for each fish species.

## side note - the 'rfishbase' package looks helpful for extracting most information from FishBase. Unfortunately, the information I need to extract is not found in a table, so this package doesn't work for me.


```{r web scraping FishBase for fish species distribution information}


# library(rvest)
# library(xml2)
# library(stringr)

# Function to scrape climate zone information from FishBase
get_climate_zone <- function(species_name) {
  # Construct the URL for the FishBase search page
  base_url <- "https://www.fishbase.se/summary/"
  search_url <- paste0(base_url, gsub(" ", "-", tolower(species_name)))
 
  # Fetch the HTML content of the search page
  search_page <- read_html(search_url)
 
  # Find the <h1> element containing the word "Environment" and get the following sibling <div>
  environment_section <- search_page %>%
    html_elements(xpath = "//h1[contains(translate(., 'ENVIRONMENT', 'environment'), 'environment')]/following-sibling::div[1]") %>%
    html_text(trim = TRUE) %>%
    tolower()
 
  # Check if environment information is found
  if (length(environment_section) == 0) {
    warning(paste("No environment information found for the species:", species_name))
    return(NA)
  }
 
  # Extract climate zone information from the Environment text
  climate_zones <- c("subtropical", "tropical", "temperate", "polar", "deep-water")
  climate_zone <- NA
 
  for (zone in climate_zones) {
    if (str_detect(environment_section, fixed(zone, ignore_case = TRUE))) {
      climate_zone <- zone
      break
    }
  }
 
  # Print environment text for diagnostics
  cat("Environment Text:", environment_section, "\n")
 
  # Return climate zone information
  return(climate_zone)
}

# Test the function for "Epinephelus morio"
species_name <- "Epinephelus morio"
climate_zone <- get_climate_zone(species_name)
print(climate_zone)


```



```{r loop through FishBase function to get information for every fish species}

# Iterate through each unique fish species - use the species_list from above which only includes fishes identified to species level (847 species)

# Initialize an empty data frame to store results
species_climate_df <- data.frame(species_name = character(), climate_zone = character(), stringsAsFactors = FALSE)

for (species in species_list) {
  # Get the climate zone for the species
  climate_zone <- get_climate_zone(species)
  
  # Append the species name and climate zone to the data frame
  species_climate_df <- rbind(species_climate_df, data.frame(species_name = species, climate_zone = climate_zone))
}

# # Print the resulting data frame
# print(species_climate_df)
# 
# # View the resulting data frame
# view(species_climate_df)

# Create csv file with species climate information
write_csv(species_climate_df, file = "output/species_climate_data.csv")



```







